<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2010-2011 smartics, Kronseder & Reiner GmbH

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
    <head profile="http://dublincore.org/documents/dcq-html/">
      <title>maven-projectmetadata-plugin</title>

      <link rel="schema.DC" href="http://purl.org/dc/elements/1.1/"/>
      <link rel="DC.rights copyright" href="license.html" />

      <meta name="keywords" content="project, metadata, maven plugin, maven"/>
      <meta name="description" content="Homepage of the Maven projectmetadata plugin. This easy-to-use plugin collects and packages project meta data."/>
      <meta name="author" content="smartics"/>

      <meta name="DC.title" content="maven-projectmetadata-plugin"/>
      <meta name="DC.creator" content="smartics"/>
      <meta name="DC.subject" content="Homepage of the Maven projectmetadata plugin"/>
      <meta name="DC.description" content="Homepage of the Maven projectmetadata plugin. This easy-to-use plugin collects and packages project meta data."/>
      <meta name="DC.publisher" content="smartics"/>
      <meta name="DC.rights" content="Copyright 2010 smartics"/>
    </head>
	<body>
    <section name="maven-projectmetadata-plugin">
      <p>
        This <a href="http://maven.apache.org/">Maven</a> plugin collects and packages meta data
        about the project and attaches the artifact to the build.
      </p>
      <p>
        This project is in an early development stage.
      </p>

      <subsection name="Configuration">
        <p>
          To run successfully this plugin requires the site plugin to have run and
          have generated the report files to include. Therefore add something like
          the following to the build plugins section of your POM:
        </p>
        <source><![CDATA[<plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-site-plugin</artifactId>
  <executions>
    <execution>
      <id>attach-site</id>
      <phase>package</phase>
      <goals>
        <goal>jar</goal>
      </goals>
    </execution>
  </executions>
</plugin>
<plugin>
  <groupId>${project.groupId}</groupId>
  <artifactId>${project.artifactId}</artifactId>
  <version>${project.version}</version>
  <executions>
    <execution>
      <id>metadata</id>
      <goals>
        <goal>archive</goal>
      </goals>
    </execution>
  </executions>
</plugin>]]></source>
      </subsection>

      <subsection name="Standard Project Meta Data">
        <p>
          Per default the following reports are added to the attached artifact,
          if they are configured (plugins added to report section) with the project:
        </p>
        <ol>
          <li>Static Analysis
            <ul>
              <li>Checkstyle</li>
              <li>PMD</li>
              <li>FindBugs</li>
              <li>JavaNCSS</li>
              <li>JDepend</li>
            </ul>
          </li>
          <li>Test
            <ul>
              <li>JUnit</li>
            </ul>
          </li>
          <li>Marker
            <ul>
              <li>Tags</li>
            </ul>
          </li>
        </ol>
      </subsection>

      <subsection name="Adding Project Meta Data">
        <p>
          Provide a project meta data descriptor of the following form:
        </p>
        <source><![CDATA[<projectMetaData>
  <metaData>
    <name></name>
    <homepage></homepage>
    <description></description>
    <category></category>
    <subcategory></subcategory>

    <files>
      <projectLocation></projectLocation>
      <archiveLocation></archiveLocation>
      <filter>
        <includes>
          <include></include>
          ...
        </includes>
        <excludes>
          <exclude></exclude>
          ...
        </excludes>
      </filter>
    </files>
  </metaData>
</projectMetaData>]]></source>
        <p>
          Add a link to this configuration file by the
          <a href="archive-mojo.html#additionalDescriptorFiles">additionalDescriptorFiles</a>
          property.
        </p>
        <p>
          This is an example for the inclusion of the checkstyle report files:
        </p>
        <source><![CDATA[<projectMetaData>
  <metaData>
    <name>Checkstyle</name>
    <homepage>http://checkstyle.sourceforge.net/</homepage>
    <description>
      Checkstyle is a development tool to help programmers write Java
      code that adheres to a coding standard. It automates the process of
      checking Java code to spare humans of this boring (but important) task.
      This makes it ideal for projects that want to enforce a coding standard.
    </description>
    <category>code</category>
    <subcategory>static analysis</subcategory>

    <files>
      <projectLocation>/target</projectLocation>
      <archiveLocation>code/static-analysis/checkstyle</archiveLocation>
      <filter>
        <includes>
          <include>checkstyle-checker.xml</include>
          <include>checkstyle-result.xml</include>
        </includes>
      </filter>
    </files>
  </metaData>
</projectMetaData>]]></source>
      </subsection>
    </section>
  </body>
</document>
