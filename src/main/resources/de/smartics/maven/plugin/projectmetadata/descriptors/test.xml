<?xml version='1.0' encoding='UTF-8'?>
<!--

    Copyright 2010-2022 smartics, Kronseder & Reiner GmbH

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<projectMetaData xmlns="http://smartics.de/projectmetadata/1">
  <metaData>
    <name>JUnit</name>
    <homepage>https://www.junit.org/</homepage>
    <description>
      JUnit is a unit testing framework.
    </description>
    <category>code</category>
    <subcategory>test</subcategory>

    <files>
      <projectLocation>/target/surefire-reports</projectLocation>
      <archiveLocation>code/test/junit</archiveLocation>
      <filter>
        <includes>
          <include>*.xml</include>
        </includes>
      </filter>
    </files>
  </metaData>

  <metaData>
    <name>Cobertura</name>
    <homepage>http://www.mojohaus.org/cobertura-maven-plugin/</homepage>
    <description>
      The report generated by this plugin is the result of executing the
      Cobertura tool against your compiled classes to help you determine how
      well the unit testing efforts have been, and can then be used to identify
      which parts of your Java program are lacking test coverage.
    </description>
    <category>code</category>
    <subcategory>test</subcategory>

    <files>
      <projectLocation>target/site/cobertura</projectLocation>
      <archiveLocation>code/test/cobertura</archiveLocation>
      <filter>
        <includes>
          <include>coverage.xml</include>
        </includes>
      </filter>
    </files>
  </metaData>


  <metaData>
    <name>Test Stories</name>
    <homepage>https://www.smartics.eu/smartics-testdoc-tools/</homepage>
    <description>
      The tools make the stories behind tests visible. They use the tests of a
      software project to generate a documentation from the executable code.
      Since the test code itself is documentation, we talk about executable
      documentation.
    </description>
    <category>code</category>
    <subcategory>test</subcategory>

    <files>
      <projectLocation>/target/testdoc-reports</projectLocation>
      <archiveLocation>code/test/stories</archiveLocation>
      <filter>
        <includes>
          <include>*.xml</include>
        </includes>
      </filter>
    </files>
  </metaData>
</projectMetaData>